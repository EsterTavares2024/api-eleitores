name: CI/CD Pipeline - Eleitor Projeto

on:
  push:
    branches:
      - test
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Habilita execução manual no GitHub

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_IMAGE_NAME: eleitor-projeto
  DOCKER_REGISTRY: docker.io
  SERVICE_NAME: eleitor-projeto
  KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}

jobs:
  build-lint:
    name: Lint PHP Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Instala PHP e dependências
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql
          tools: php-cs-fixer

      - name: Rodar PHP-CS-Fixer
        run: |
          if [ -f vendor/bin/php-cs-fixer ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff || true
          else
            echo "php-cs-fixer não encontrado. Pulando step."
          fi

  test:
    name: Rodar Testes com PHPUnit
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Instalar PHP e extensões
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo, pdo_mysql, dom
          tools: composer

      - name: Instalar composer
        run: composer install --no-interaction --prefer-dist

      - name: Rodar PHPUnit
        run: |
          cd api-eleitores
          vendor/bin/phpunit --log-junit report.xml

      - name: Upload do Report de Teste
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: api-eleitores/report.xml

  cleanup:
    name: Cleanup - Destroy Infra
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Executa apenas manualmente
    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Destruir Infraestrutura
        run: |
          cd infra
          terraform init
          terraform destroy -auto-approve
